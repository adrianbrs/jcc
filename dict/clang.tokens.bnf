# Verificar se o identificador já foi declarado no mesmo escopo
4000 ::= 4001 2000 # SINGLE_DECLARATION ::= TYPE id

# Verificar se algum dos identificadores já foi declarado no mesmo escopo
4002 ::= 4003 3008 2000 # MULTIPLE_DECLARATION ::= DECLARATION , id
4002 ::= 4004 3008 2000 # MULTIPLE_DECLARATION ::= DECLARATION_ASSIGNMENT , id
4002 ::= 4005 3008 2000 # MULTIPLE_DECLARATION ::= FUNCTION_DECLARATION , id

# Para imitar o comportamento do compilador C
4004 ::= 4003 3011 4006 # DECLARATION_ASSIGNMENT ::= DECLARATION = EXPRESSION
4004 ::= 4005 3011 4006 # DECLARATION_ASSIGNMENT ::= FUNCTION_DECLARATION = EXPRESSION

4003 ::= 4000 # DECLARATION ::= SINGLE_DECLARATION
4003 ::= 4002 # DECLARATION ::= MULTIPLE_DECLARATION

4007 ::= 1031 # TYPE_PRIMITIVE ::= void
4007 ::= 1017 # TYPE_PRIMITIVE ::= int
4007 ::= 1008 # TYPE_PRIMITIVE ::= double
4007 ::= 1012 # TYPE_PRIMITIVE ::= float
4007 ::= 1003 # TYPE_PRIMITIVE ::= char
4007 ::= 1023 # TYPE_PRIMITIVE ::= signed
4007 ::= 1030 # TYPE_PRIMITIVE ::= unsigned
4007 ::= 1022 # TYPE_PRIMITIVE ::= short
4007 ::= 1018 # TYPE_PRIMITIVE ::= long

# Verificar a compatibilidade de tipos
4001 ::= 4007 # TYPE ::= TYPE_PRIMITIVE
4001 ::= 4001 4001 # TYPE ::= TYPE TYPE

# Verificar se a declaração possui um único identificador
4005 ::= 4003 3004 3005 # FUNCTION_DECLARATION ::= DECLARATION ( )

4008 ::= 4005 4009 # FUNCTION_DEFINITION ::= FUNCTION_DECLARATION STATEMENT_BLOCK

4010 ::= 3009 # STATEMENT ::= ;
4010 ::= 4003 3009 # STATEMENT ::= DECLARATION ;
4010 ::= 4004 3009 # STATEMENT ::= DECLARATION_ASSIGNMENT ;
4010 ::= 4005 3009 # STATEMENT ::= FUNCTION_DECLARATION ;
4010 ::= 4008 # STATEMENT ::= FUNCTION_DEFINITION
4010 ::= 4010 4010 # STATEMENT ::= STATEMENT STATEMENT
4010 ::= 1021 3009 # STATEMENT ::= return ;
4010 ::= 1021 4006 3009 # STATEMENT ::= return EXPRESSION ;

4009 ::= 3000 3001 # STATEMENT_BLOCK ::= { }
4009 ::= 3000 4010 3001 # STATEMENT_BLOCK ::= { STATEMENT }
4009 ::= 3000 4009 3001 # STATEMENT_BLOCK ::= { STATEMENT_BLOCK }
4009 ::= 3000 4009 4010 3001 # STATEMENT_BLOCK ::= { STATEMENT_BLOCK STATEMENT }
4009 ::= 3000 4010 4009 3001 # STATEMENT_BLOCK ::= { STATEMENT STATEMENT_BLOCK }
4009 ::= 4011 # STATEMENT_BLOCK ::= LOOP_STATEMENT
4009 ::= 4012 # STATEMENT_BLOCK ::= LOOP_DEFINITION
4009 ::= 4009 4009 # STATEMENT_BLOCK ::= STATEMENT_BLOCK STATEMENT_BLOCK

4011 ::= 1005 3009 # LOOP_STATEMENT ::= continue ;
4011 ::= 1001 3009 # LOOP_STATEMENT ::= break ;

4013 ::= 4014 # LOOP_DECLARATION ::= WHILE

4012 ::= 4013 4006 # LOOP_DEFINITION ::= LOOP_DECLARATION EXPRESSION
4012 ::= 4013 4009 # LOOP_DEFINITION ::= LOOP_DECLARATION STATEMENT_BLOCK
4012 ::= 4013 3009 # LOOP_DEFINITION ::= LOOP_DECLARATION ;

4006 ::= 2000 # EXPRESSION ::= id
4006 ::= 2001 # EXPRESSION ::= number_literal
4006 ::= 2002 # EXPRESSION ::= string_literal
4006 ::= 2003 # EXPRESSION ::= char_literal
4006 ::= 3004 4006 3005 # EXPRESSION ::= ( EXPRESSION )

4015 ::= 1033 3004 4006 # WHILE_OPEN ::= while ( EXPRESSION
4014 ::= 4015 3005 # WHILE ::= WHILE_OPEN )
