# Verificar se o identificador já foi declarado no mesmo escopo
4000 ::= 4001 2000 # SINGLE_DECLARATION ::= TYPE id

# Verificar se algum dos identificadores já foi declarado no mesmo escopo
4002 ::= 4003 3008 2000 # MULTIPLE_DECLARATION ::= DECLARATION , id
4002 ::= 4004 3008 2000 # MULTIPLE_DECLARATION ::= DECLARATION_ASSIGNMENT, id

4004 ::= 4003 3011 4005 # DECLARATION_ASSIGNMENT ::= DECLARATION = EXPRESSION

4003 ::= 4000 # DECLARATION ::= SINGLE_DECLARATION
4003 ::= 4002 # DECLARATION ::= MULTIPLE_DECLARATION

4006 ::= 1031 # TYPE_PRIMITIVE ::= void
4006 ::= 1017 # TYPE_PRIMITIVE ::= int
4006 ::= 1008 # TYPE_PRIMITIVE ::= double
4006 ::= 1012 # TYPE_PRIMITIVE ::= float
4006 ::= 1003 # TYPE_PRIMITIVE ::= char
4006 ::= 1023 # TYPE_PRIMITIVE ::= signed
4006 ::= 1030 # TYPE_PRIMITIVE ::= unsigned
4006 ::= 1022 # TYPE_PRIMITIVE ::= short
4006 ::= 1018 # TYPE_PRIMITIVE ::= long

# Verificar a compatibilidade de tipos
4001 ::= 4006 # TYPE ::= TYPE_PRIMITIVE
4001 ::= 4001 4001 # TYPE ::= TYPE TYPE

4007 ::= 4003 3004 3005 # FUNCTION_DECLARATION ::= DECLARATION ( )

4008 ::= 3009 # STATEMENT ::= ;
4008 ::= 4003 3009 # STATEMENT ::= DECLARATION ;
4008 ::= 4007 3009 # STATEMENT ::= FUNCTION_DECLARATION ;
4008 ::= 4004 3009 # STATEMENT ::= DECLARATION_ASSIGNMENT ;
4008 ::= 4008 4008 # STATEMENT ::= STATEMENT STATEMENT

4005 ::= 2000 # EXPRESSION ::= id
4005 ::= 2001 # EXPRESSION ::= number_literal
4005 ::= 2002 # EXPRESSION ::= string_literal
4005 ::= 2003 # EXPRESSION ::= char_literal
4005 ::= 3004 4005 3005 # EXPRESSION ::= ( EXPRESSION )