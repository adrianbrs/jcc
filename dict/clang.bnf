IDENTIFIER ::= id

# Verificar se o identificador já foi declarado no mesmo escopo
SIMPLE_DECLARATION ::= TYPE IDENTIFIER

SIMPLE_DECLARATION_ASSIGNMENT ::= SIMPLE_DECLARATION = EXPRESSION

# Verificar se o identificador já foi declarado no mesmo escopo
COMPLEX_DECLARATION ::= SIMPLE_DECLARATION , IDENTIFIER
COMPLEX_DECLARATION ::= COMPLEX_DECLARATION , IDENTIFIER
COMPLEX_DECLARATION ::= COMPLEX_DECLARATION_ASSIGNMENT , IDENTIFIER

COMPLEX_DECLARATION_ASSIGNMENT ::= COMPLEX_DECLARATION = EXPRESSION

# Verificar se a função já foi declarada antes
FUNCTION_DECLARATION ::= SIMPLE_DECLARATION ( )
FUNCTION_DECLARATION ::= SIMPLE_DECLARATION ( SIMPLE_DECLARATION )
FUNCTION_DECLARATION ::= SIMPLE_DECLARATION ( SIMPLE_DECLARATION , ... )
FUNCTION_DECLARATION ::= SIMPLE_DECLARATION ( FUNCTION_DECLARATION_ARGUMENTS )
FUNCTION_DECLARATION ::= SIMPLE_DECLARATION ( FUNCTION_DECLARATION_ARGUMENTS , ... )

FUNCTION_DECLARATION_ARGUMENTS ::= SIMPLE_DECLARATION , SIMPLE_DECLARATION
FUNCTION_DECLARATION_ARGUMENTS ::= FUNCTION_DECLARATION_ARGUMENTS , SIMPLE_DECLARATION

TYPE ::= void
TYPE ::= int
TYPE ::= double
TYPE ::= float
TYPE ::= char
TYPE ::= signed
TYPE ::= unsigned
TYPE ::= short
TYPE ::= long
TYPE ::= TYPE TYPE