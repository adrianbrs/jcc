import { CLexemeType } from "../interfaces/lexeme-type.interface.js";
import { CTokenDef, ICTokenDictKeys } from "../token-def.js";

export const C_KEYWORDS = CTokenDef.make(
  {
    auto: 0,
    break: 1,
    case: 2,
    char: 3,
    const: 4,
    continue: 5,
    default: 6,
    do: 7,
    double: 8,
    else: 9,
    enum: 10,
    extern: 11,
    float: 12,
    for: 13,
    goto: 14,
    if: 15,
    inline: 16,
    int: 17,
    long: 18,
    register: 19,
    restrict: 20,
    return: 21,
    short: 22,
    signed: 23,
    sizeof: 24,
    static: 25,
    struct: 26,
    switch: 27,
    typedef: 28,
    union: 29,
    unsigned: 30,
    void: 31,
    volatile: 32,
    while: 33,
    _Alignas: 34,
    _Alignof: 35,
    _Atomic: 36,
    _Bool: 37,
    _Complex: 38,
    _Generic: 39,
    _Imaginary: 40,
    _Noreturn: 41,
    _Static_assert: 42,
    _Thread_local: 43,
  } as const,
  CLexemeType.KEYWORD as const
);

export type CKeyword = ICTokenDictKeys<typeof C_KEYWORDS>;
